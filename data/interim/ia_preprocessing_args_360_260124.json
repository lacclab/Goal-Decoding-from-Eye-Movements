{
    "NLP_MODEL": "en_core_web_sm",
    "SURPRISAL_MODELS": [
        "gpt2"
    ],
    "add_prolific_qas_distribution": false,
    "add_question_in_prompt": false,
    "base_cols": [
        "IA_DWELL_TIME",
        "d_proportion",
        "IA_REGRESSION_OUT_COUNT",
        "Reduced_POS",
        "is_correct",
        "TRIAL_TOTAL_VISITED_IA_COUNT",
        "min_IA_ID",
        "CURRENT_FIX_X",
        "prev_Wordfreq_Frequency",
        "Is_Content_Word",
        "IA_ID",
        "IA_LEFT",
        "IA_REGRESSION_IN_COUNT",
        "is_before_aspan",
        "n_Lefts",
        "IA_DWELL_TIME_%",
        "correct_answer",
        "IA_LABEL",
        "prev_Length",
        "normalized_part_dwell_time",
        "part_total_IA_DWELL_TIME",
        "Wordfreq_Frequency",
        "is_in_dspan",
        "IA_FIRST_FIXATION_DURATION",
        "answers_order",
        "CURRENT_FIX_Y",
        "Token_idx",
        "Length",
        "IA_REGRESSION_PATH_DURATION",
        "Relationship",
        "IA_SPILLOVER",
        "TRIAL_DWELL_TIME",
        "reverse_ID",
        "n_Rights",
        "Morph",
        "part_min_IA_ID",
        "Entity",
        "IA_FIRST_SACCADE_ANGLE",
        "FINAL_ANSWER",
        "list",
        "part_max_IA_ID",
        "question",
        "Head_Direction",
        "total_IA_DWELL_TIME",
        "IA_FIXATION_COUNT",
        "IA_TOP",
        "total_skip",
        "Head_word_idx",
        "reread",
        "is_in_aspan",
        "IA_FIRST_RUN_DWELL_TIME",
        "IA_SELECTIVE_REGRESSION_PATH_DURATION",
        "IA_LAST_RUN_DWELL_TIME",
        "end_of_line",
        "CURRENT_FIX_DURATION",
        "Distance2Head",
        "IA_FIRST_FIXATION_VISITED_IA_COUNT",
        "part_ID",
        "IA_RUN_COUNT",
        "CURRENT_FIX_INTEREST_AREA_LABEL",
        "TAG",
        "IA_LAST_RUN_FIXATION_%",
        "relative_to_aspan",
        "c_proportion",
        "TRIAL_INDEX",
        "regression_rate",
        "IA_LAST_FIXATION_DURATION",
        "Token",
        "TRIAL_IA_COUNT",
        "IA_REGRESSION_OUT_FULL_COUNT",
        "part_length",
        "b_proportion",
        "Word_idx",
        "IA_FIRST_RUN_FIXATION_%",
        "q_ind",
        "part_num_fixations",
        "practice",
        "normalized_ID",
        "abcd_answer",
        "subject_id",
        "prev_gpt2_Surprisal",
        "IA_AVERAGE_FIX_PUPIL_SIZE",
        "CURRENT_FIX_PUPIL",
        "IA_FIRST_RUN_FIXATION_COUNT",
        "prev_subtlex_Frequency",
        "normalized_dwell_time",
        "IA_LAST_RUN_FIXATION_COUNT",
        "unique_paragraph_id",
        "CURRENT_FIX_INTEREST_AREA_INDEX",
        "IA_LAST_SACCADE_ANGLE",
        "PARAGRAPH_RT",
        "TRIAL_FIXATION_COUNT",
        "normalized_part_ID",
        "is_after_aspan",
        "next_relative_to_aspan",
        "a_proportion",
        "start_of_line",
        "IA_FIRST_FIX_PROGRESSIVE",
        "has_preview",
        "subtlex_Frequency",
        "article_ind",
        "gpt2_Surprisal",
        "POS",
        "reverse_part_ID",
        "IA_FIRST_SACCADE_AMPLITUDE",
        "IA_LAST_SACCADE_AMPLITUDE",
        "max_IA_ID",
        "IA_FIXATION_%",
        "entropy",
        "NEXT_FIX_INTEREST_AREA_INDEX",
        "span_type",
        "IA_SKIP"
    ],
    "cols_to_add": [],
    "cols_to_remove": [],
    "filter_query": "practice==0",
    "gathering_data_path": {
        "_type": "python_object (type = PosixPath)",
        "_value": "gASVfgAAAAAAAACMB3BhdGhsaWKUjAlQb3NpeFBhdGiUk5QojAEvlIwEZGF0YZSMBGhvbWWUjAVzaHViaZSMGENvZ25pdGl2ZS1TdGF0ZS1EZWNvZGluZ5RoBIwDcmF3lIwgcF9pYV9yZXBvcnRfYWxsX3BhcnRpY2lwYW50cy50c3aUdJRSlC4="
    },
    "hunting_data_path": {
        "_type": "python_object (type = PosixPath)",
        "_value": "gASVfgAAAAAAAACMB3BhdGhsaWKUjAlQb3NpeFBhdGiUk5QojAEvlIwEZGF0YZSMBGhvbWWUjAVzaHViaZSMGENvZ25pdGl2ZS1TdGF0ZS1EZWNvZGluZ5RoBIwDcmF3lIwgbl9pYV9yZXBvcnRfYWxsX3BhcnRpY2lwYW50cy50c3aUdJRSlC4="
    },
    "item_column": [
        "article_id"
    ],
    "mode": {
        "_type": "python_object (type = Mode)",
        "_value": "gASVVAAAAAAAAACMCGJ1aWx0aW5zlIwHZ2V0YXR0cpSTlIwnb25lc3RvcGdhemVfcHJlcHJvY2Vzc2luZy5wcmVwcm9jZXNzaW5nlIwETW9kZZSTlIwCSUGUhpRSlC4="
    },
    "qas_prolific_distribution_path": null,
    "reproducibility": {
        "command_line": "python scripts/parse_data.py",
        "git_has_uncommitted_changes": true,
        "git_root": "/data/home/shubi/Cognitive-State-Decoding",
        "git_url": "https://github.com/lacclab/Cognitive-State-Decoding/tree/966b9bb3b6d9a475074e74891c4f0492ab3d39a2",
        "time": "Sun Jan 28 10:15:59 2024"
    },
    "save_path": {
        "_type": "python_object (type = PosixPath)",
        "_value": "gASVgQAAAAAAAACMB3BhdGhsaWKUjAlQb3NpeFBhdGiUk5QojAEvlIwEZGF0YZSMBGhvbWWUjAVzaHViaZSMGENvZ25pdGl2ZS1TdGF0ZS1EZWNvZGluZ5RoBIwHaW50ZXJpbZSMH2lhX2RhdGFfZW5yaWNoZWRfMzYwXzI2MDEyNC5jc3aUdJRSlC4="
    },
    "subject_column": [
        "subject_id"
    ],
    "unique_item_column": "unique_paragraph_id",
    "unique_item_columns": [
        "batch",
        "article_id",
        "level",
        "paragraph_id"
    ]
}